[{"/Users/luoshiqin/Desktop/react/react-practice/typing-speed/src/index.js":"1","/Users/luoshiqin/Desktop/react/react-practice/typing-speed/src/App.js":"2","/Users/luoshiqin/Desktop/react/react-practice/typing-speed/src/reportWebVitals.js":"3","/Users/luoshiqin/Desktop/react/react-practice/typing-speed/src/text.js":"4","/Users/luoshiqin/Desktop/研究所/網站作品/typing-speed/src/index.js":"5","/Users/luoshiqin/Desktop/研究所/網站作品/typing-speed/src/App.js":"6","/Users/luoshiqin/Desktop/研究所/網站作品/typing-speed/src/reportWebVitals.js":"7","/Users/luoshiqin/Desktop/研究所/網站作品/typing-speed/src/text.js":"8"},{"size":500,"mtime":1609761499797,"results":"9","hashOfConfig":"10"},{"size":4983,"mtime":1612080394049,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1609761499798,"results":"12","hashOfConfig":"10"},{"size":11558,"mtime":1612079948509,"results":"13","hashOfConfig":"10"},{"size":500,"mtime":1609761499797,"results":"14","hashOfConfig":"15"},{"size":5992,"mtime":1617522997453,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1609761499798,"results":"17","hashOfConfig":"15"},{"size":13191,"mtime":1617523292729,"results":"18","hashOfConfig":"15"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"1b92j24",{"filePath":"22","messages":"23","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"17yrnw8",{"filePath":"31","messages":"32","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/luoshiqin/Desktop/react/react-practice/typing-speed/src/index.js",[],["38","39"],"/Users/luoshiqin/Desktop/react/react-practice/typing-speed/src/App.js",["40","41","42","43","44","45","46"],"/Users/luoshiqin/Desktop/react/react-practice/typing-speed/src/reportWebVitals.js",[],"/Users/luoshiqin/Desktop/react/react-practice/typing-speed/src/text.js",[],"/Users/luoshiqin/Desktop/研究所/網站作品/typing-speed/src/index.js",[],["47","48"],"/Users/luoshiqin/Desktop/研究所/網站作品/typing-speed/src/App.js",["49","50","51","52","53","54","55","56"],"import './App.css';\nimport {textDBNoFrontScreen, textDBHaveFrontScreen, videoUrls, typingSpeedArticle} from './text'\nimport React,{useState,useEffect} from 'react';\nimport ReactPlayer from \"react-player\";\n\n\nconst App = () => {\n  const [currentWord, setCurrentWord] = useState(0);\n  const [resultWord, setResultWord] = useState(0);\n  const [editWord, setEditWord] = useState('');\n\n  const [flag, setFlag] = useState(0);\n  const [typingSpeedflag, setTypingSpeedFlag] = useState(false);\n  const [oldTimeStamp, setOldTimeStamp] = useState(0);//時間戳記\n  const [wrong, setWrong] = useState(0);//錯誤數\n  const [errorRate, setErrorRate] = useState(0);//錯誤率\n  const [finalWord, setFinalWord] = useState(0);//最後結果輸入字數\n  const [finalWrong, setFinalWrong] = useState(0);//最後結果錯誤數\n  const [articleNum, setArticleNum] = useState(0);//文章編號\n\n\n  //模式轉換******************\n  const [mode, setMode] = useState({\n    open:'none',\n    modeFlag:1,\n    modeArticle:textDBNoFrontScreen\n  });\n\n\n  //文章內容\n  const [text, setText] = useState(mode.modeArticle[articleNum])//把文字資料放入text內\n  const arrayText = Array.from(text);\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleKeyIn, false);\n    setEditWord(text.charAt(currentWord));\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyIn, false);\n    };\n  }, [currentWord,mode.modeArticle])\n\n\n  let arrayTextMap = arrayText.map((value,current)=>{\n        if(current < currentWord){\n          return <div key={current} className=\"normal correct\">{value}</div>\n        }\n        if(current === currentWord ){\n          return <div key={current} className=\"normal current\" >{value}</div>//目前要打的字\n        }else{\n          return <div key={current} className=\"normal\" >{value}</div>\n        }\n      })\n  \n  /*輸入觸發*/\n  const handleKeyIn = (e) => {\n    let add = 0;\n    let error = 0;\n    let timestamp\n    let arrayLength = 0\n    let articleNumCount = 0\n\n    //第一次輸入\n    if(flag === 0){\n      timestamp = Math.floor(new Date() / 1000);\n      setArticleNum((setArticleNum) => setArticleNum + 1);\n      if(typingSpeedflag){setTimeout(()=>{alert(`STOP`)},60000)}\n    }\n\n\n    //全部輸入完畢\n    if(currentWord  === arrayText.length - 1 && text.charAt(currentWord)===e.key){\n      arrayLength = arrayText.length;\n      articleNumCount = 1\n      setText(mode.modeArticle[articleNum]);\n      setArticleNum((setArticleNum) => setArticleNum + 1);\n    }\n\n    //計算輸入正確與錯誤\n    if(text.charAt(currentWord)===e.key){\n      add = 1;\n    }else if('Shift' === e.key || 'CapsLock' === e.key){\n\n    }\n    else{\n      add = 1;\n      error = 1;\n\n    }\n\n    setFlag(flag === 0 ? 1 : 1) \n    setResultWord((resultWord)=> resultWord + add);//最終輸入的字數\n    setCurrentWord((currentWord)=> currentWord + add - error - arrayLength);//目前輸入的字數與重置\n    setWrong((wrong)=> wrong+error);//錯誤數+1\n  }\n\n  /*結果顯示*/\n  const resultClick = () => {\n    console.log('resultClick');\n    setFinalWord(resultWord)\n    setFinalWrong(wrong)\n    setErrorRate(wrong / resultWord )\n  }\n\n  /*模式轉換*/\n  // const modeCliclk = () => {\n  //   let v,f,t\n  //    if(mode.modeFlag === 1){\n  //      v = \"video\";\n  //      f = 0;\n  //      t =  textDBHaveFrontScreen;\n  //    }else{\n  //      v = \"video none\";\n  //      f = 1 ;\n  //      t = textDBNoFrontScreen;\n  //    }\n  //   setMode({open : v,modeFlag : f, modeArticle: t});\n  //   setText(t[articleNum]);\n  // }\n  const haveFrontScreenModeClick = () => {\n    setMode({open : \"video\",modeFlag : 0, modeArticle: textDBHaveFrontScreen});\n    setText(textDBHaveFrontScreen[articleNum]);\n  }\n  const haveNoFrontScreenModeClick = () => {\n    setMode({open : \"video none\",modeFlag : 1, modeArticle: textDBNoFrontScreen});\n    setText(textDBNoFrontScreen[articleNum]);\n  }\n  const typingSpeedClick = () => {\n    console.log('typing');\n    setMode({open : 'video none',modeFlag : 1, modeArticle: typingSpeedArticle});\n    setText(typingSpeedArticle[articleNum]);\n    setTypingSpeedFlag(true)\n  }\n\n\n  /*影片轉換*/\n  const videoClick = () => {\n    let url\n    if(videoUrl.props.url == videoNoFrontScreen.props.url){\n      url = videoHaveFrontScreen\n    }else{\n      url = videoNoFrontScreen\n    }\n    setVideoUrl(url)\n  }\n  const videoHaveFrontScreen = (<ReactPlayer\n            className=''\n            url= {videoUrls.haveFrontScreen}\n            width='100%'\n            playing={flag}\n            />)\n\n  const videoNoFrontScreen = (<ReactPlayer\n            className=''\n            url= {videoUrls.noFrontScreen}\n            width='100%'\n            playing={flag}\n            />)\n\n  const [videoUrl, setVideoUrl] = useState(videoHaveFrontScreen)\n  /*影片轉換*/\n\n  return (\n    <>\n    <div className=\"container\">\n      <div className=\"main\">\n        <div className=\"article\">{arrayTextMap}</div>\n        <div className={mode.open}>\n            {/* {videoUrl} */}\n            <ReactPlayer\n            className=''\n            url= {videoUrls.haveFrontScreen}\n            width='100%'\n            playing={flag}\n            />\n        </div>\n    </div>\n\n    </div>\n    <div className=\"footer\">\n      <div onClick={resultClick} className=\"result-button\">結果</div>\n      {/* <div onClick={modeCliclk} className=\"result-button\">切換模式</div> */}\n      <div onClick={haveNoFrontScreenModeClick} className=\"result-button\">無車前模式</div>\n      <div onClick={haveFrontScreenModeClick} className=\"result-button\">有車前模式</div>\n      <div onClick={typingSpeedClick} className=\"result-button\">打字速度測試</div>\n      <div  className=\"result\">正確率：{1 - errorRate.toFixed(3)}_</div>\n      <div  className=\"result\">錯誤率：{errorRate.toFixed(3)}_</div>\n      <div  className=\"result\">輸入字數：{finalWord}_</div>\n      <div  className=\"result\">錯誤數：{finalWrong}</div>\n    </div>\n    </>\n  );\n}\n\nexport default App;\n","/Users/luoshiqin/Desktop/研究所/網站作品/typing-speed/src/reportWebVitals.js",[],"/Users/luoshiqin/Desktop/研究所/網站作品/typing-speed/src/text.js",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":10,"column":10,"nodeType":"63","messageId":"64","endLine":10,"endColumn":18},{"ruleId":"61","severity":1,"message":"65","line":13,"column":10,"nodeType":"63","messageId":"64","endLine":13,"endColumn":22},{"ruleId":"61","severity":1,"message":"66","line":13,"column":24,"nodeType":"63","messageId":"64","endLine":13,"endColumn":39},{"ruleId":"67","severity":1,"message":"68","line":39,"column":6,"nodeType":"69","endLine":39,"endColumn":36,"suggestions":"70"},{"ruleId":"61","severity":1,"message":"71","line":63,"column":7,"nodeType":"63","messageId":"64","endLine":63,"endColumn":16},{"ruleId":"61","severity":1,"message":"72","line":71,"column":7,"nodeType":"63","messageId":"64","endLine":71,"endColumn":22},{"ruleId":"73","severity":1,"message":"74","line":121,"column":27,"nodeType":"75","messageId":"76","endLine":121,"endColumn":29},{"ruleId":"57","replacedBy":"77"},{"ruleId":"59","replacedBy":"78"},{"ruleId":"61","severity":1,"message":"62","line":10,"column":10,"nodeType":"63","messageId":"64","endLine":10,"endColumn":18},{"ruleId":"61","severity":1,"message":"65","line":14,"column":10,"nodeType":"63","messageId":"64","endLine":14,"endColumn":22},{"ruleId":"61","severity":1,"message":"66","line":14,"column":24,"nodeType":"63","messageId":"64","endLine":14,"endColumn":39},{"ruleId":"67","severity":1,"message":"68","line":40,"column":6,"nodeType":"69","endLine":40,"endColumn":36,"suggestions":"79"},{"ruleId":"61","severity":1,"message":"71","line":64,"column":7,"nodeType":"63","messageId":"64","endLine":64,"endColumn":16},{"ruleId":"61","severity":1,"message":"72","line":73,"column":7,"nodeType":"63","messageId":"64","endLine":73,"endColumn":22},{"ruleId":"61","severity":1,"message":"80","line":136,"column":9,"nodeType":"63","messageId":"64","endLine":136,"endColumn":19},{"ruleId":"73","severity":1,"message":"74","line":138,"column":27,"nodeType":"75","messageId":"76","endLine":138,"endColumn":29},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"no-unused-vars","'editWord' is assigned a value but never used.","Identifier","unusedVar","'oldTimeStamp' is assigned a value but never used.","'setOldTimeStamp' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'handleKeyIn' and 'text'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setEditWord' needs the current value of 'text'.","ArrayExpression",["83"],"'timestamp' is assigned a value but never used.","'articleNumCount' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["81"],["82"],["84"],"'videoClick' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"85","fix":"86"},{"desc":"85","fix":"87"},"Update the dependencies array to be: [currentWord, handleKeyIn, mode.modeArticle, text]",{"range":"88","text":"89"},{"range":"90","text":"89"},[1225,1255],"[currentWord, handleKeyIn, mode.modeArticle, text]",[1310,1340]]